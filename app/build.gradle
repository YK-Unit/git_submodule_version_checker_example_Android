apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.unit.york.androidexample"
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

task check_git_submodule_version(type: Exec) {
    def root_dir = getRootDir()
    executable "sh"
    args "$root_dir/git_submodule_version_checker/git_submodule_version_checker.sh", "$root_dir"

    ignoreExitValue true

    doLast {
        logger.lifecycle("check result: $execResult")

        if(execResult.exitValue == 0) {
            logger.lifecycle('SUCCESS')
        } else {
            throw new GradleException("This main repo has bad submodules, please run \'git submodule update --init --recursive\' to fix it.")
        }
    }

}

preBuild.dependsOn check_git_submodule_version